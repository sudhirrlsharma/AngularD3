package cybage.dao;

import java.math.BigDecimal;
import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import cybage.model.Beer;
import cybage.model.DomesticBeer;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations={"classpath:applicationContext.xml","classpath:applicationContext-transaction.xml"})
public class BeerDaoImplTest{
	
	private BeerDao beerDao = null;
	
	@Autowired
	public void setBeerDao(BeerDao beerDao) {
		this.beerDao = beerDao;
	}
	
	@Test
	public void testGetAllBeer() {
		List beers = beerDao.getAllBeer();
		System.out.println("Below is the available bears");
		System.out.println("--------------------------------------");
		
		for (int i = 0; i < beers.size(); i++) {
			Map beer = (Map) beers.get(i);
			System.out.println("id " + beer.get("id"));
			System.out.println("brand " + beer.get("brand"));
			System.out.println("price " + beer.get("price"));
			
			System.out.println("--------------------------------------");
		}
		
		Assert.assertTrue(true);
	}
	
	@Test
	public void testGetListBeer() {
		List beers = beerDao.getAllBeer();
		
		for (int i = 0; i < beers.size(); i++) {
			Beer beer = (Beer) beers.get(i);
			System.out.println("id " + beer.getId());
			System.out.println("brand " + beer.getBrand());
			System.out.println("price " + beer.getPrice());
			Assert.assertTrue(true);
			
			System.out.println("--------------------------------------");
		}
		
	}
	
	@Test
	public void testGetBeer() {
		Beer beer = beerDao.get(new Integer(1));
		System.out.println("id " + beer.getId());
		System.out.println("brand " + beer.getBrand());
		System.out.println("price " + beer.getPrice());
		Assert.assertTrue(true);
		
	}
	
	@Test
	public void testSaveBeer() throws SQLException {
		Beer beer = new DomesticBeer(Long.valueOf(18), "beer1", new BigDecimal(12.2));
		beerDao.saveBeer(beer);
		System.out.println("--------------------------------------");
		System.out.println("--------------------------------------");
		/*
		 * Object[] bearParam1 = { 19, "beer1", 12.2 };
		 * beerDao.saveBeer(bearParam1);
		 * 
		 * Object[] bearParam3 = { 11, "beer1", 12.2 };
		 * beerDao.saveBeer(bearParam3);
		 */
	}
	
}
